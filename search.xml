<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[20180328]]></title>
    <url>%2F20180328.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[20180126测试]]></title>
    <url>%2F20180126test.html</url>
    <content type="text"><![CDATA[啦啦啦啦啦]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[博客配置过程]]></title>
    <url>%2Fgithub_hexo_next.html</url>
    <content type="text"><![CDATA[记录一下利用github+hexo+next配置博客的过程 安装和配置Hexo安装Hexo安装Hexo需要Git+Node.js的环境，需要安装以下： Node.js 下载地址 Git， windows下安装Git-bash就可以使用Git。 安装完以上程序，打开Git-bash输入 1npm install -g hexo-cli 即可完成Hexo的安装。 使用Hexo进行本地建站在本地D:\hexo路径下输入 12hexo init # 初始化一些文件npm install # 安装依赖 hexo安装成功后在D:\hexo文件夹下的文件目录为 12345678.├── _config.yml // 网站的配置信息，你可以在此配置大部分的参数。├── package.json ├── scaffolds // 模板文件夹。当你新建文章时，Hexo会根据scaffold来建立文件。├── source // 存放用户资源的地方| ├── _drafts| └── _posts└── themes // 存放网站的主题。Hexo会根据主题来生成静态页面。 具体含义见 Hexo官方文档 之后输入 1hexo server 此时会启动本地部署好的默认的博客网站 地址是：http://localhost:4000/ 创建与Github账号同名的Repository同名的Repository，比如帐号是MyGithub，那新建的Repository名称应该是MyGithub.github.io 配置SSH(1) 生成SSH检查是否已经有SSH Key，打开Git Bash，输入 cd ~/.ssh如果没有这个目录，则生成一个新的SSH，输入 1ssh-keygen -t rsa -C &quot;your e-mail&quot; your e-mail是注册Github时用到的邮箱。 (2) 复制公钥内容到Github账户信息中打开~/.ssh/id_rsa.pub文件，复制里面的内容； 打开Github官网，登陆后进入到个人设置(点击头像-&gt;setting)，点击右侧的SSH Keys，点击Add SSH key；填写title之后，将之前复制的内容粘贴到Key框中，最后点击Add key即可。 (3) 测试SSH是否配置成功输入 1ssh -T git@github.com 如果显示以下，则说明ssh配置成功。 12Hi username! You&apos;ve successfully authenticated, but GitHub does notprovide shell access. (4) 配置github 账户12git config --global user.name &quot;username&quot;git config --global user.email &quot;email&quot; 配置完之后输入： 1git config --list查看已设配置 看username, email是不是都对了 将网站发布到Github的同名repository中 打开D:\Hexo文件夹中的_config.yml文件，找到如下位置，填写 12345# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:MyGithub/MyGithub.github.io.git 注： (1) 其中MyGithub替换成你的Github账户 (2) 注意在yml文件中，:后面都是要带空格的。 12hexo g # 生成静态资源, 即public文件夹hexo d # 部署到github 此时，通过访问http://MyGithub.github.io可以看到默认的Hexo首页面（与之前本地测试时一样）。 更换为 NexT主题在Hexo站点目录下执行命令 1git clone https://github.com/iissnan/hexo-theme-next themes/next clone完成后打开blog下的themes文件夹就可以看到有两个主题，一个是默认的，一个是刚刚clone的NexT主题。站点配置文件D:\hexo\_config.yml主题配置文件D:\hexo\themes\next\_config.yml在站点配置文件_config.yml中进行搜索key为’theme’，如果没有theme就添加key为theme，其值为next 123456# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/# theme: landscape# 设置主题为nexttheme: next 需要注意的是冒号:后面有一个空格在blog目录中右击选择git bash here 分别执行清除静态资源，生成静态资源，启动服务命令 123hexo clean # 清除静态资源hexo g # 生成静态资源hexo s # 启动服务命令 在浏览器中访问http://localhost:4000/ 便可看到效果 在./hexo/themes/next打开配置文件_config.yml找到Schemes，选择一种风格将#去掉就可以了，修改之后不用重启服务直接刷新浏览器就能看到效果 123456# 切换样式# Schemes#scheme: Musescheme: Mist#scheme: Pisces#scheme: Gemini 到此本地资源基本上完成了。 站点配置文件(显示的语言)在站点配置文件中修改显示的语言: 12# Sitelanguage: en 修改头像在站点的_config.yml，添加字段 avatar。 12# 设置头像avatar: /images/avatar.gif 路径是发布了以后public文件夹下的imgages。你可以修改\themes\next\source\images中的图片。也可以在其他地方放置图片，因为图片类的自然都会在发布后放进public\images。 发布文章这里可以参考hexo的官方文档，通过命令的形式来玩 1hexo n &quot;name of the new post&quot; 回车后，在source文件夹下的_post文件夹下，可以看到新建了一个name of the new post.md的文件也可以到D:\hexo\source_posts 目录下直接新建.md 结尾的文件就可以了，所以平时如果写了markdown格式的文档可以拷贝到这个路径下直接就发布了 文章资源文件夹来自官方网站: https://hexo.io/zh-cn/docs/asset-folders.html 对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 config.yml文件中的 post_asset_folder 选项设为 true 来打开。1_config.ymlpost_asset_folder: true 当资源文件管理功能打开后，Hexo将会在你每一次通过 hexo new [layout] &lt;title&gt; 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。 永久链接为Front-matter区域添加变量urlname，这样方便固定博客的链接。参考: http://www.wuliaole.com/post/permalink_and_internal_link_in_hexo/ tags &amp; categories的用法直接参考主题配置文件目录下的readme即可 参考YAML格式: https://hexo.io/docs/front-matter.html 开启站内搜索功能本地搜索配置，官网链接: https://www.npmjs.com/package/hexo-generator-searchdb 安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：1$ npm install hexo-generator-searchdb --save 站点配置文件，新增以下内容到任意位置：经测试，这一步可以不做，不然多生成一个search.xml 冲突 12345search: path: search.xml field: post format: html limit: 10000 主题配置文件，启用本地搜索功能：123# Local searchlocal_search: enable: true gitment评论参考: http://blog.csdn.net/yanzi1225627/article/details/77890414注：github 账户 ID 我更推荐直接填写自己的账户名。如果想使用自己的 Github 账户ID，可以在浏览器输入： https://api.github.com/users/你的账户名 腾讯公益404页面参考: http://theme-next.iissnan.com/theme-settings.html#volunteer-404腾讯公益404页面，寻找丢失儿童，让大家一起关注此项公益事业！效果如下 http://www.ixirong.com/404.html 使用方法，新建 404.html 页面，放到主题的 source 目录下，内容如下：123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8;&quot;/&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;/&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;script type=&quot;text/plain&quot; src=&quot;http://www.qq.com/404/search_children.js&quot; charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot; homePageName=&quot;回到我的主页&quot;&gt; &lt;/script&gt; &lt;script src=&quot;https://qzone.qq.com/gy/404/data.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://qzone.qq.com/gy/404/page.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 参考: barrysite.me, 或者参考他的github: volcfamily: Hexo设置: next 主题设置]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2FHello-World.html</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
